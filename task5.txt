import tkinter as tk
from tkinter import messagebox, simpledialog

# Sample data structure for storing contacts
contacts = []

def add_contact():
    name = entry_name.get()
    phone = entry_phone.get()
    email = entry_email.get()
    address = entry_address.get()
    
    if not name or not phone:
        messagebox.showerror("Input Error", "Name and Phone number are required.")
        return
    
    contact = {
        "name": name,
        "phone": phone,
        "email": email,
        "address": address
    }
    contacts.append(contact)
    refresh_contact_list()
    clear_entries()

def refresh_contact_list():
    listbox_contacts.delete(0, tk.END)
    for contact in contacts:
        listbox_contacts.insert(tk.END, f"{contact['name']} - {contact['phone']}")

def clear_entries():
    entry_name.delete(0, tk.END)
    entry_phone.delete(0, tk.END)
    entry_email.delete(0, tk.END)
    entry_address.delete(0, tk.END)

def search_contact():
    search_term = entry_search.get()
    if not search_term:
        messagebox.showerror("Input Error", "Please enter a name or phone number to search.")
        return

    results = [contact for contact in contacts if search_term in contact['name'] or search_term in contact['phone']]
    if results:
        listbox_contacts.delete(0, tk.END)
        for contact in results:
            listbox_contacts.insert(tk.END, f"{contact['name']} - {contact['phone']}")
    else:
        messagebox.showinfo("Search Result", "No contacts found.")
    
def update_contact():
    selected_contact = listbox_contacts.curselection()
    if not selected_contact:
        messagebox.showerror("Selection Error", "Please select a contact to update.")
        return
    
    index = selected_contact[0]
    contact = contacts[index]
    
    new_name = simpledialog.askstring("Update Contact", "Enter new name:", initialvalue=contact['name'])
    new_phone = simpledialog.askstring("Update Contact", "Enter new phone number:", initialvalue=contact['phone'])
    new_email = simpledialog.askstring("Update Contact", "Enter new email:", initialvalue=contact['email'])
    new_address = simpledialog.askstring("Update Contact", "Enter new address:", initialvalue=contact['address'])
    
    if new_name and new_phone:
        contacts[index] = {
            "name": new_name,
            "phone": new_phone,
            "email": new_email,
            "address": new_address
        }
        refresh_contact_list()
    else:
        messagebox.showerror("Input Error", "Name and Phone number are required.")

def delete_contact():
    selected_contact = listbox_contacts.curselection()
    if not selected_contact:
        messagebox.showerror("Selection Error", "Please select a contact to delete.")
        return
    
    index = selected_contact[0]
    contacts.pop(index)
    refresh_contact_list()

# Create main window
root = tk.Tk()
root.title("Contact Book")

# Create input fields and labels
tk.Label(root, text="Name:").grid(row=0, column=0, padx=10, pady=5)
entry_name = tk.Entry(root)
entry_name.grid(row=0, column=1, padx=10, pady=5)

tk.Label(root, text="Phone:").grid(row=1, column=0, padx=10, pady=5)
entry_phone = tk.Entry(root)
entry_phone.grid(row=1, column=1, padx=10, pady=5)

tk.Label(root, text="Email:").grid(row=2, column=0, padx=10, pady=5)
entry_email = tk.Entry(root)
entry_email.grid(row=2, column=1, padx=10, pady=5)

tk.Label(root, text="Address:").grid(row=3, column=0, padx=10, pady=5)
entry_address = tk.Entry(root)
entry_address.grid(row=3, column=1, padx=10, pady=5)

# Create listbox to display contacts
listbox_contacts = tk.Listbox(root, width=50)
listbox_contacts.grid(row=0, column=2, rowspan=7, padx=10, pady=5)

# Create search field and button
tk.Label(root, text="Search:").grid(row=4, column=0, padx=10, pady=5)
entry_search = tk.Entry(root)
entry_search.grid(row=4, column=1, padx=10, pady=5)
tk.Button(root, text="Search", command=search_contact).grid(row=4, column=2, padx=10, pady=5)

# Create buttons
tk.Button(root, text="Add Contact", command=add_contact).grid(row=5, column=0, columnspan=2, pady=10)
tk.Button(root, text="Update Contact", command=update_contact).grid(row=6, column=0, columnspan=2, pady=5)
tk.Button(root, text="Delete Contact", command=delete_contact).grid(row=7, column=0, columnspan=2, pady=5)

# Start the main loop
root.mainloop()
